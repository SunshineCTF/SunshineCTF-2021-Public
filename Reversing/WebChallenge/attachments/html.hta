<html>

                              <head>
  <title>Travel Backend</title>
  <!-- added whitespace for readability 03/19/05 OW-->
  <link         rel="stylesheet"
    href="./root.css">
                  <link rel="stylesheet" href="./fontawesome-fonts.css"
    type="text/css">
      <link rel="stylesheet"
                                        href=./fontawesome-all.min.css"           type="text/css">
                                      <!-- added sha384 for security 09/14/17 TJ -->
                                      <!-- updated to latest bootstrap 10/28/20 UW -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
      integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2"
      
      
      
      crossorigin="anonymous">
  </head>

<body>
  <!-- formatted nav section finally can read it 10/29/20 UW -->
  <nav>
    <div>
      <div class="left">
        <a href="/">
          <img class="logo"
            src="https://2021.sunshinectf.org/files/d75f1bf99fa5f347f171eb6ea5b2eec5/image0.jpg"
            alt="SunshineCTF 2021" width="20%">
        </a>
        <a class="nav-link" href="/">Travel Backend</a>
      </div>
    </div>
  </nav>
  <form class="form-signin" name="getuserdatafromform">
    <div class="form-container">
      <div class="form-header btn-primary"><i class="fa fa-plane" aria-hidden="true"></i> Secure Backend (C) 1999. ✅ Best viewed in IE 5 on a 1024x768 screen.</div>
      <!-- added logo to celebrate PCI-SIG compliance. YAY WE DID IT TEAM 09/19/17 TJ -->
      <!-- -->
      <marquee>
      <img class="logo"
        src="./pceye_compliant.png"
        alt="super secure logo" width="40%">
      </div></marquee>
    <input class="form-control" type="text" name="encrypt_input" id="name-input" value="file/to/encrypt">
    <input class="form-control" type="text" name="encrypt_password" id="name-input" value="encryption_password">
    <input class="btn btn-lg btn-primary btn-block btn btn-md btn-primary btn-outlined float-right" TYPE="Run"
      NAME="Encrypt" VALUE="Encrypt message for database storage">
    <!-- store passwords in hashmap as hashing is good for securing things. 03/19/11 OW -->
    <!-- old method used hashmap to store passwords. Improved security 10/23/17 TJ -->
    <!-- hashmap was faster. this way is terrible TJ 10/23/17 OW -->
    <!-- code obfuscated to prevent user from changing it. 10/25/17 TJ -->
    <!-- tj whyyyyyyy whatever got my job to do wish there was SVN SO I COULD REVERT THIS. Ugh now gotto do this manual way.  10/26/17 OW -->
    <!-- what hte heck is the database doing???? TJ left this year how does this work? 11/04/20 UW -->
    <input class="form-control" type="text" name="account_name" id="name-input" value="account name">
    <input class="btn btn-lg btn-primary btn-block btn btn-md btn-primary btn-outlined float-right" TYPE="Run"
      NAME="Load CC Info" VALUE="Load account from customer credit card database">
      <input class="form-control" type="text" name="decrypt_input" id="name-input" value="file/to/decrypt 🏗 💔">
      <input class="form-control" type="text" name="decrypt_password" id="name-input" value="decryption_password">
    <input class="btn btn-lg btn-primary btn-block btn btn-md btn-primary btn-outlined float-right" TYPE="Run"
      NAME="Decrypt" VALUE="Decrypt message from database 🏗 💔">
    <script FOR="Encrypt" EVENT="onClick" LANGUAGE="VBScript">
      Set WshShell = CreateObject("WScript.Shell")
      ' 2011/04/14 initial code seems secure OW
      ' 2017/11/03 made code PCI-SIG compliant now uses system bus correctly and better encryption TJ
      ' 2017/11/04 undid change by TJ code worked before this is terrible OW
      ' 2017/11/05 used more languages so user cannot refactor TJ
      ' 2017/11/06 hah added two more you dont know anything! OW
      ' 2017/11/07 fine added another language! at least its secure. TJ
      ' 2017/11/09 whatevs its back to normal now i can at least use it now. Truec? OW
      ' 2017/11/10 truce TJ
      ' 2019/08/01 switched to powershell core, they support emojis now TJ'
      ' 2019/08/01 COOOOOOOL! OW'
      ' 2019/08/01 Im gonna write a script to use it now! OW'
      ' 2019/08/03 Script done, whatdday think?! OW'
      ' 2019/08/04 Good! TJ'
      ' 11/02/20 i am not going to try to figure out what htis does it is weird going to start with decryption UW

      ' added debug statements 11/04/20 UW
      WshShell.Run "cmd.exe '/c ""echo print debug value ^'"& getuserdatafromform.encrypt_input.value & "^' ^'" & getuserdatafromform.encrypt_password.value & "^' & timeout 5"""'"
      WshShell.Run "cmd.exe '/c ""powershell.exe -ExecutionPolicy Bypass -File ./encrypt.ps1 "& getuserdatafromform.encrypt_input.value & " ^'" & getuserdatafromform.encrypt_password.value & "^' & timeout 5"""'"
    </script>
    <script FOR="Load CC Info" EVENT="onClick" LANGUAGE="VBScript">
      Set WshShell = CreateObject("WScript.Shell")
      ' note for future self apostrophes are comments in vbscript??????? UW 11/01/20
      ' added debug statements 11/04/20 UW
      WshShell.Run "cmd.exe '/c ""echo print debug value ^'"& getuserdatafromform.account_name.value & "^' & timeout 5"""'"
      ' 11/05/20 how does this code work????? without bypass it screams about issues UW
      ' the script is really weird wth did TJ do to it?? 
      WshShell.Run "cmd.exe '/c ""database.bat ^""" & getuserdatafromform.account_name.value & "^"" & timeout 5""'"
    </script>
    <script FOR="Decrypt" EVENT="onClick" LANGUAGE="VBScript">
      Set WshShell = CreateObject("WScript.Shell")
      ' NOOOOOOOOOOOOOOOO was testing encryptiong of files with the automated test account CC info! IT ENCRYPTED THE SCRIPT should be backupc though UW 11/05/20
      ' there's no backup of decrypt.ps1 UW 11/06/20
      WshShell.Run "cmd.exe '/c ""powershell.exe -ExecutionPolicy Bypass -file decrypt.ps1 -Filename "& getuserdatafromform.decrypt_input.value & " -Key ^'" & getuserdatafromform.decrypt_password.value & "^' & timeout 5"""'"
    </script>
  </form>
</body>

</html>